// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/achievements": {
            "get": {
                "description": "Get all achievements with pagination, default page is 1 and default pageSize is 10",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Get all achievements",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.AchievementResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new achievement with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Create a new achievement",
                "parameters": [
                    {
                        "description": "Create Achievement Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateAchievementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/achievements/{achievementID}": {
            "get": {
                "description": "Get an achievement by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Get an achievement by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Achievement ID",
                        "name": "achievementID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an achievement with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Update an achievement",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Achievement ID",
                        "name": "achievementID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Achievement Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateAchievementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an achievement by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Delete an achievement",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Achievement ID",
                        "name": "achievementID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/achievements/{achievementID}/players": {
            "get": {
                "description": "Get an achievement with players by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Achievement"
                ],
                "summary": "Get an achievement with players",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Achievement ID",
                        "name": "achievementID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login to the application with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login to the application",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/players": {
            "get": {
                "description": "Get all players with pagination, by default page is 1 and pageSize is 10",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Get all players",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new player profile with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Create a new player profile",
                "parameters": [
                    {
                        "description": "Create Player Profile Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreatePlayerProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/players/{playerID}": {
            "get": {
                "description": "Get player by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Get player by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update player by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Update player by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Player Profile Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdatePlayerProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete player by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Delete player by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/players/{playerID}/achievements": {
            "get": {
                "description": "Get player with achievements by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Player"
                ],
                "summary": "Get player with achievements by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all users, can be paginated, default page is 1 and default pageSize is 10",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                },
                "x-order": 1
            },
            "post": {
                "description": "Create a new user with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "Create User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                },
                "x-order": 0
            }
        },
        "/users/{userID}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.CreateAchievementRequest": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Achievement description",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5
                },
                "name": {
                    "description": "Achievement name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5
                }
            }
        },
        "request.CreatePlayerProfileRequest": {
            "type": "object",
            "required": [
                "avatar",
                "experience",
                "level",
                "nickname",
                "point",
                "user_id"
            ],
            "properties": {
                "avatar": {
                    "description": "Player avatar",
                    "type": "string"
                },
                "experience": {
                    "description": "Player experience",
                    "type": "integer"
                },
                "level": {
                    "description": "Player level",
                    "type": "integer"
                },
                "nickname": {
                    "description": "Player nickname",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "point": {
                    "description": "Player points",
                    "type": "integer"
                },
                "user_id": {
                    "description": "User ID (foreign key) in the database",
                    "type": "integer"
                }
            }
        },
        "request.CreateUserRequest": {
            "type": "object",
            "required": [
                "age",
                "email",
                "password",
                "user_name"
            ],
            "properties": {
                "age": {
                    "description": "User age",
                    "type": "integer",
                    "minimum": 18
                },
                "email": {
                    "description": "User email",
                    "type": "string"
                },
                "password": {
                    "description": "User password",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 8
                },
                "user_name": {
                    "description": "User name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "User email",
                    "type": "string"
                },
                "password": {
                    "description": "User password",
                    "type": "string"
                }
            }
        },
        "request.UpdateAchievementRequest": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Achievement description",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5
                },
                "name": {
                    "description": "Achievement name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5
                }
            }
        },
        "request.UpdatePlayerProfileRequest": {
            "type": "object",
            "required": [
                "avatar",
                "experience",
                "level",
                "nickname",
                "points"
            ],
            "properties": {
                "avatar": {
                    "description": "Player avatar",
                    "type": "string"
                },
                "experience": {
                    "description": "Player experience",
                    "type": "integer"
                },
                "level": {
                    "description": "Player level",
                    "type": "integer"
                },
                "nickname": {
                    "description": "Player nickname",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                },
                "points": {
                    "description": "Player points",
                    "type": "integer"
                }
            }
        },
        "request.UpdateUserRequest": {
            "type": "object",
            "required": [
                "age",
                "email",
                "user_name"
            ],
            "properties": {
                "age": {
                    "description": "User age",
                    "type": "integer",
                    "minimum": 18
                },
                "email": {
                    "description": "User email",
                    "type": "string"
                },
                "user_name": {
                    "description": "User name",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 3
                }
            }
        },
        "response.AchievementResponse": {
            "type": "object",
            "required": [
                "description",
                "id",
                "name"
            ],
            "properties": {
                "description": {
                    "description": "Achievement description",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 5
                },
                "id": {
                    "description": "Achievement ID (primary key) in the database",
                    "type": "integer"
                },
                "name": {
                    "description": "Achievement name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                }
            }
        },
        "response.BaseResponse": {
            "description": "Base response structure",
            "type": "object",
            "properties": {
                "code": {
                    "description": "HTTP status code of the response",
                    "type": "integer",
                    "x-order": "0",
                    "example": 200
                },
                "status": {
                    "description": "Status of the response",
                    "type": "string",
                    "x-order": "1",
                    "example": "success"
                },
                "message": {
                    "description": "Message of the response",
                    "type": "string",
                    "x-order": "2",
                    "example": "Operation completed successfully"
                },
                "data": {
                    "description": "Data payload of the response",
                    "x-order": "3"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "Auth"
        },
        {
            "name": "User"
        },
        {
            "name": "Player"
        },
        {
            "name": "Achievement"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Player Profile API",
	Description:      "This is a simple API for managing player profiles and achievements",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
