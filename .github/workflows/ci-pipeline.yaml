name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-test-scan:
    name: Build, Test, and Scan
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.1'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      # Cacheo de golangci-lint
      - name: Cache golangci-lint
        uses: actions/cache@v4
        with:
          path: ~/.golangci-lint
          key: ${{ runner.os }}-golangci-lint-${{ hashFiles('.golangci.yml') }}
          restore-keys: |
            ${{ runner.os }}-golangci-lint-

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6.0.1
        with:
          args: --out-format colored-line-number

      - name: Run tests and generate coverage report
        run: |
          mkdir -p coverage
          go test -v -coverprofile=coverage/coverage.out -covermode=atomic ./...

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Cacheo de Snyk CLI
      - name: Cache Snyk CLI
        uses: actions/cache@v4
        with:
          path: ~/.snyk
          key: ${{ runner.os }}-snyk-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-snyk-

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --all-projects